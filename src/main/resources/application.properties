#DataSource Setup
quarkus.datasource.db-kind=postgresql
#dev
quarkus.datasource.username=postgres
quarkus.datasource.password=a7890602
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres?currentSchema=ktst
quarkus.hibernate-orm.sql-load-script = import_dev.sql
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.database.default-schema=ktst
quarkus.hibernate-orm.database.generation.create-schemas=true

quarkus.http.port=8084
quarkus.http.test-port=8085

# Graphql Setup
quarkus.smallrye-graphql.root-path=/${quarkus.application.name}/api/public/graphql
quarkus.smallrye-graphql.error-extension-fields=exception,classification,code,description,validationErrorType,queryPath

# Swagger Open API
## 取得api定義文件的api端點
quarkus.smallrye-openapi.path=/${quarkus.application.name}/api/public/swagger
quarkus.smallrye-openapi.info-version=${quarkus.application.version}
quarkus.smallrye-openapi.security-scheme-name=apiKey
# quarkus.smallrye-openapi.servers=http://app.lianhwa.com.tw
quarkus.smallrye-openapi.info-description=倉儲管理API
# quarkus.swagger-ui.theme=material

# Logger Setup
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}][%L] (%t) %s%e%n
quarkus.log.file.enable=false
# quarkus.log.file.path=/work/logs/quarkus.log
quarkus.log.file.rotation.file-suffix=.yyyy-MM-dd
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}][%L] (%t) %s%e%n
quarkus.log.file.rotation.rotate-on-boot=true

#使用flyway需先把hibernate建立table的指令關掉
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.sql-load-script=no-file
#還不確定是做甚麼的，但需設NONE才可運作
quarkus.hibernate-orm.multitenant=NONE

# Flyway
##schemas名稱，對應資料庫Schemas，沒有的話會自動建立
quarkus.flyway.schemas=${DB_SCHEMA:ktst}
##flyway歷程table的名稱
quarkus.flyway.table=flyway_schema_${quarkus.application.name}
##啟動時將資料庫Schema更新到最新版本，設定為false不會執行SQL檔
quarkus.flyway.migrate-at-start=true
##歷程表中存在但路徑中不存在的舊版本的遷移將被忽略(用於收檔)
quarkus.flyway.ignore-missing-migrations=true
quarkus.flyway.baseline-on-migrate=true